name: hermine-ci
on:
  - push
  - workflow_dispatch
jobs:
  validation-1:
    runs-on: ubuntu-latest
    steps:
      - name: call-1
        id: call-1
        uses: fjogeleit/http-request-action@master
        with:
          url: 'https://chantier.hermine-foss.org/api/releases/33/unnormalised_usages'
          method: 'GET'
          # bearerToken: 
      - name: Show Response
        run: echo ${{ steps.call-1.outputs.response }}
        
  validation-2:
    needs: validation-1
    if: fromJSON(validation-1.steps.call-1.outputs.response).valid
    runs-on: ubuntu-latest
    steps:
      - name: call-2
        id: call-2
        uses: fjogeleit/http-request-action@master
        with:
          url: 'https://chantier.hermine-foss.org/api/releases/33/licenses_to_check'
          method: 'GET'
          # bearerToken: 
      - name: Show Response
        run: echo ${{ steps.call-2.outputs.response }}

        
  validation-3:
    needs: validation-2
    if: fromJSON(jobs.validation-2.steps.call-2.outputs.response).valid
    runs-on: ubuntu-latest
    steps: 
      - name: call-3
        id: call-3
        uses: fjogeleit/http-request-action@master
        with:
          url: 'https://chantier.hermine-foss.org/api/releases/33/licenses_usages'
          method: 'GET'
          # bearerToken: 
      - name: Show Response
        run: echo ${{ steps.call-3.outputs.response }}
  
  validation-4:
    needs: validation-3
    if: fromJSON(jobs.validation-3.steps.call-3.outputs.response).valid
    runs-on: ubuntu-latest
    steps:
      - name: call-4
        id: call-4
        uses: fjogeleit/http-request-action@master
        with:
          url: 'https://chantier.hermine-foss.org/api/releases/33/licenses_against_policy'
          method: 'GET'
          # bearerToken: 
      - name: Show Response
        run: echo ${{ steps.call-4.outputs.response }}
